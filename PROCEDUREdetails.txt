Procedure to make NEW RPi SD Card Image
=======================================
{This is a semi-automated system using the latest standard OS from Raspberry Pi [PART A] which is then modified for FabMo with a
   script that is run on a RPi [PART B].}

PART A. ##### MAKE the Working-OS-Image (once we have an image we are happy with we can just re-use for months)
** REPLACE 1 and 2 by doing the imaging on the Pi itself?? **
** Check out the new "sdm" system to improve this system and potentially get smaller zipped image for shipping **
1. Download image from Raspi Foundation to PC [Current 64bit Desktop (w/o rec software) Image] and save to a "build" folder.
2. Use this image to create an initial SD-card using Balena Etcher.
3. Run this card once on a Raspberry Pi:
	- hook up a keyboard/mouse and follow the start-up sequence .... {{details}}
	- this takes a while because it brings in all the latest updates
4. Shut down the RPi, remove this card, and bring the card back to PC.
5. Use Win32Disk Imager to make the new "Working-OS-Image" SAVE THIS ==MASTER== FOR UPDATES ! (probably no need to change for months)

PART B. ##### MAKE the FabMo-RPi-SD-Image (based on downloaded Working-OS-Image)
6. Copy the "Working-OS-Image" to an SD-card, with Balena Etcher. THIS will now be the SD card FOR our FabMo-RPi-SD-Image BUILD !
7. Boot up this card up on a Raspberry Pi:
    - Go to Preferences > RPi COnfiguration > Interfaces > and turn SSH on
8. THEN DO:
    sudo mkdir /home/pi/Scripts
    [copy into this new folder (you can use WinSCP logged on as pi) from "FabMo_RPi_SD_Image_Builder" repo]:
      	build-fabmo-image.sh
	    resources [folder]
9. NEXT DO: 
	cd /home/pi/Scripts  
	sudo ./build-fabmo-image.sh

10. WHEN the script is finished running, check to make sure things got installed and permissions look right.
11. Reboot this card as a test. Hopefully everything comes up looking as it should and ethernet cable switching works?
12. This SD card can now be used with the Win32Disk Imager to make our NEW FabMo-RPi-Image
      	(it can also be copied from this RPi for quick copies or copied to a smaller card to minimize the zipped image file that we make).
        
Some details:
    = The BUILD script creates symlink for many of the systemd service files that FabMo uses and some scripts. This is done so that the
         functionality that these files support can be managed in fabmo repo, along with fabmo. Thus if they are updated a full new build is
         not required as they will be updated along with fabmo (or fabmo-updater). This means one needs to attend to keeping
         these files current in fabmo and fabmo-updater. Currently they are:
               /fabmo/files:
                   fabmo.service
                   network-monitor.sh
                   network-monitor.service
                *note to maybe put modify-priorities in the build script   
                   camera-server-1.service
                   camera-server-2.service
                   export-netcfg-thumbdrive.service
                   export-netcfg-thumbdrive.path
               /fabmo-updater/files:
                   fabmo-updater.service


