Procedure to make NEW RPi SD Card Image
=======================================
* EASIEST TO already HAVE A KEYBOARD AND TRACK PAD or MOUSE PLUGGED into Raspberry Pi when doing these things!
{This is a semi-automated system using the latest standard OS from Raspberry Pi [see Instructions PART A] which is then modified for FabMo with a
   script that is run on a RPi [Instructions PART B].}

PART A. ##### MAKING the Working-OS-Image (once we have an image we are happy with we can just re-use for months)
** Maybe REPLACE 1 and 2 by doing the imaging on the Pi itself?? **
** Check out the new "sdm" system to improve precustomization of this system and potentially get smaller zipped image for shipping **
1. Download image from Raspi Foundation to PC [Current 64bit Desktop (w/o recommended software) Image] and save to a "build" folder.
    > NOW USING LITE VERSION TO GET ON 8G
2. Use this image to create an initial SD-card using Balena Etcher.
3. Run this card once on a Raspberry Pi:
	- hook up a keyboard/mouse and follow the start-up sequence .... {{details}}
	- this takes a while because it --brings in all the latest updates--
    - enable SSH
    - make dir   /home/pi/Scripts 
    - fix file running from File Manager 
    - install rpi-connect, may not be included in lite version
4. Shut down the RPi, remove this card, and bring the card back to PC.
5. Use Win32Disk Imager to make the new "Working-OS-Image" SAVE THIS ==MASTER== FOR UPDATES ! (probably no need to change for months; this itself could be updated before a major release)


--UPDATE VERSION IN ==>   fabmo-release.txt    [this will go in /boot(where viewable from SD on Windows PC) and /etc]
--node versioning is done in Set up node.js of build-dabmo-image.sh in case it's version needs to be set ... *** tried setting to 18.x to match current dev but woud not install so went back to 16.x tho 18.19.0 after install
    **## NEED TO GET DEPENDENCIES UPDATED
--check journalctl log size before doing this next time // see in notes in onenote

**NOTE ==> COPY FABMO FILES TO FABMO //  NEED a Little chart of this including what is symlinked and what is not
    /fabmo/files/network_conf_fabmo  and check for other potential updates !!!
    

PART B. ##### MAKING the FabMo-RPi-SD-Image (based on downloaded Working-OS-Image)
6. Copy the "Working-OS-Image" to an SD-card, with Balena Etcher. THIS will now be the SD card FOR our FabMo-RPi-SD-Image BUILD !
7. Boot up this card up on a Raspberry Pi:
    - Go to Preferences > RPi COnfiguration > Interfaces > and turn SSH on if it is not
8. Open up an ssh terminal connection, THEN DO:
    cd /home/pi
    sudo mkdir Scripts
    [copy into this new folder (you can use WinSCP logged on as pi) from "FabMo_RPi_SD_Image_Builder" current local repo]:
      	build-fabmo-image.sh
	    resources [folder]
9. NEXT DO: 
	From Terminal:  cd /home/pi/Scripts  
	                sudo ./build-fabmo-image.sh

10. WHEN the script is finished running, check to make sure things got installed and permissions look right.
    10.5 REMOVE THE BUILD SCRIPT AND RESOURCES

11. DO NOT Reboot this card as a test if you want to make a small version as it seems to expand for the last time on the reboot (see cmd.txt init=)! 
12. Make a copy of this SD card to a smaller SD card; 8G seems to work at the moment using SD Card Copier Accessory in RPi.
13. This SD card can now be used with the Win32Disk Imager (GOOGLE DOCS OFF) to make our NEW FabMo-RPi-Image

14. Make a Zipped Copy of the NEW FabMo-RPi-Image for distribution and post.

Some details:
    = The BUILD script creates symlink for many of the systemd service files that FabMo uses and some scripts. This is done so that the
         functionality that these files support can be managed in the fabmo repo, along with fabmo. Thus if they are updated a full new image build is
         not required as they will be updated along with fabmo (or fabmo-updater). This means one needs to attend to keeping
         these files current in fabmo and fabmo-updater. Currently they are:
               /fabmo/files:
                   fabmo.service
                   camera-server-1.service
                   camera-server-2.service
                 /fabmo/files/network_conf_fabmo 
                     network-monitor.sh
                     network-monitor.service
                     export-netcfg-thumbdrive.service
                     export-netcfg-thumbdrive.path
               /fabmo-updater/files:
                   fabmo-updater.service
               /usr/local/bin
                   ck_heat_volts.sh
                   ck_network.sh
                   ck_services.sh
                   setup_wlan0_ap.sh     *move to networking area?
               /sysd-services
                   hostapd.service
                   setup-wlan0_ap.service
               /NetworkManager
                   /system-connections
                       /system-connections 
                           direct-connection 
                           lan-connection
                           wlan0_ap.nmconnection 
                       NetworkManager.conf    


    *this LIST is INCOMPLETE ! finish ... 
    *Note that modify-priorities and set-network-priorities are not being used from this point  

